{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "4a5d54aa-0f5c-4406-ace4-bf02701a3f07",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "C:\\Users\\DELL\n",
      "E:\\aanchal\\Project\\Data\\nutri\n"
     ]
    }
   ],
   "source": [
    "import os\n",
    "print(os.getcwd())  # print the current working directory\n",
    "os.chdir(r'E:\\aanchal\\Project\\Data\\nutri')  # change the directory\n",
    "print(os.getcwd())  # print the new working directory"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "59b8640f-8b25-4162-9d5d-c1f1661ebd43",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['core-data-images', 'core-data-test_rating.csv', 'core-data-train_rating.csv', 'core-data-valid_rating.csv', 'core-data_recipe.csv', 'Nutri.docx', 'raw-data-images', 'raw-data_interaction.csv', 'raw-data_recipe.csv']\n"
     ]
    }
   ],
   "source": [
    "import os\n",
    "print(os.listdir())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "5bd9ce4e-1315-4192-a78f-c0a3db549adf",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "\n",
    "# Load raw data\n",
    "raw_recipe_df = pd.read_csv(r'E:\\aanchal\\Project\\Data\\nutri\\raw-data_recipe.csv')\n",
    "raw_interaction_df = pd.read_csv(r'E:\\aanchal\\Project\\Data\\nutri\\raw-data_interaction.csv')\n",
    "\n",
    "# Load core data\n",
    "core_valid_rating_df = pd.read_csv(r'E:\\aanchal\\Project\\Data\\nutri\\core-data-valid_rating.csv')\n",
    "core_train_rating_df = pd.read_csv(r'E:\\aanchal\\Project\\Data\\nutri\\core-data-train_rating.csv')\n",
    "core_test_rating_df = pd.read_csv(r'E:\\aanchal\\Project\\Data\\nutri\\core-data-test_rating.csv')\n",
    "core_recipe_df = pd.read_csv(r'E:\\aanchal\\Project\\Data\\nutri\\core-data_recipe.csv')\n",
    "\n",
    "# Load image data\n",
    "raw_image_df = pd.read_csv(r'E:\\aanchal\\Project\\Data\\nutri\\raw-data-images.csv')\n",
    "core_image_df = pd.read_csv(r'E:\\aanchal\\Project\\Data\\nutri\\core-data-images.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "50b109dd-ebb6-4fb0-9247-8ef38ae759ca",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import os\n",
    "\n",
    "# Change the directory\n",
    "os.chdir(r'E:\\aanchal\\Project\\Data\\nutri')\n",
    "\n",
    "# Print the current working directory\n",
    "print(os.getcwd())\n",
    "\n",
    "# Load the data\n",
    "raw_recipe_df = pd.read_csv('raw-data_recipe.csv')\n",
    "raw_interaction_df = pd.read_csv('raw-data_interaction.csv')\n",
    "\n",
    "# Preprocess the data\n",
    "# ... (add your preprocessing code here)\n",
    "\n",
    "# Split the data into training and testing sets\n",
    "train_recipe_df, test_recipe_df, train_interaction_df, test_interaction_df = train_test_split(raw_recipe_df, raw_interaction_df, test_size=0.2, random_state=42)\n",
    "\n",
    "# Feature engineering\n",
    "# ... (add your feature engineering code here)\n",
    "\n",
    "# Recommender system development\n",
    "def recommender_system(user_id, recipe_df, interaction_df):\n",
    "    # Collaborative filtering or content-based filtering\n",
    "    # ... (add your recommender system code here)\n",
    "    return recommended_recipes\n",
    "\n",
    "# Healthiness prediction model development\n",
    "def healthiness_prediction(recipe_features):\n",
    "    # Train a machine learning model\n",
    "    # ... (add your healthiness prediction code here)\n",
    "    return healthiness_score\n",
    "\n",
    "# Testing and validation\n",
    "def evaluate_recommender_system(test_interaction_df, recommended_recipes):\n",
    "    # Calculate accuracy or other metrics\n",
    "    # ... (add your evaluation code here)\n",
    "    return accuracy\n",
    "\n",
    "def evaluate_healthiness_prediction(test_recipe_df, healthiness_scores):\n",
    "    # Calculate accuracy or other metrics\n",
    "    # ... (add your evaluation code here)\n",
    "    return accuracy\n",
    "\n",
    "# Deployment\n",
    "def deploy_recommender_system(user_id):\n",
    "    # Get user's historical interactions\n",
    "    # ... (add your deployment code here)\n",
    "    recommended_recipes = recommender_system(user_id, recipe_df, interaction_df)\n",
    "    return recommended_recipes\n",
    "\n",
    "def deploy_healthiness_prediction(recipe_id):\n",
    "    # Get recipe's features\n",
    "    # ... (add your deployment code here)\n",
    "    healthiness_score = healthiness_prediction(recipe_features)\n",
    "    return healthiness_score"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f16ce4fa-ead8-4a6a-9e00-cf2cf8a7368a",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
